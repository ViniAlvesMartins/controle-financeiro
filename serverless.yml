service: controle-financeiro
frameworkVersion: "2"

custom:
  webpack:
    webpackConfig: "./webpack.config.js" # Name of webpack configuration file
    includeModules:
      forceInclude:
        - mysql2
      forceExclude:
        - aws-sdk
    packager: "npm"
  serverless-offline:
    port: 3000
  contentCompression: 1024
  funcDir: src/4-framework/functions
  baseAPi: api/v1

provider:
  name: aws
  memorySize: 1024
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-2'}
  timeout: 60
  package:
    excludeDevDependencies: true
    exclude:
      - .git/**
      - .vscode/**
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    DATABASE_HOST: "database-2.c5wgrjqjtzm1.us-east-1.rds.amazonaws.com"
    DATABASE_PORT: "3306"
    DATABASE_USER: "vinicius_martins"
    DATABASE_PASSWORD: "financeiro"
    DATABASE: "financeiro"
    API_KEY: "aXRhw7o="

plugins:
  - serverless-webpack
  - serverless-offline

functions:
  - ${file(${self:custom.funcDir}/auth/_handlers.yml)}
  - ${file(${self:custom.funcDir}/category/_handlers.yml)}
  - ${file(${self:custom.funcDir}/subcategory/_handlers.yml)}
  - ${file(${self:custom.funcDir}/release/_handlers.yml)}
  - ${file(${self:custom.funcDir}/balance/_handlers.yml)}

resources:
  Resources:
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: ${self:provider.stage}-financeiro

    ApiGatewayAuthorizerHeader:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: authorizerFunc
        Type: REQUEST
        AuthorizerResultTtlInSeconds: 0
        IdentitySource: method.request.header.api-key
        IdentityValidationExpression: .*
        RestApiId: ${ssm:apiKeyId}
        AuthorizerUri: arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:controle-financeiro-dev-authorizerFunc/invocations
